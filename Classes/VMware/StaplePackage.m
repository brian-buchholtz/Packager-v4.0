//
//  StaplePackage.m
//  Packager
//
//  Created by Brian Buchholtz on 4/20/2020.
//
//  Copyright Â© 2019 VMware. All rights reserved.
//
//

#import <Foundation/Foundation.h>
#import "StaplePackage.h"
#import "Logger.h"

@implementation StaplePackage {
    
}

+ (void)writeStapleScript:(NSString *)stringFileName SettingsApplicationName:(NSString *)stringSettingsApplicationName SettingsApplicationVersion:(NSString *)stringSettingsApplicationVersion ProjectTarget:(NSString *)stringProjectTarget ProjectDevId:(NSString *)stringProjectDevId RequestUuid:(NSString *)stringRequestUuid {
    
    // Package and staple script files
    NSString *stringPackageFile = stringFileName;
    NSString *stringScriptFile = [NSString stringWithFormat:@"%@/Staple_%@.sh", stringProjectTarget, stringFileName];
    
    // Generate staple script contents
    NSString *stringData = @"#!/bin/bash\n";
    stringData = [NSString stringWithFormat:@"%@# Auto-generated by: %@ %@\n", stringData, stringSettingsApplicationName, stringSettingsApplicationVersion];
    stringData = [NSString stringWithFormat:@"%@\n", stringData];
    stringData = [NSString stringWithFormat:@"%@stringPassword=`osascript -e 'Tell application \"System Events\" to display dialog \"Enter Dev ID Password:\" with hidden answer default answer \"\" buttons {\"Ok\"} default button 1 with title \"Staple Package\"' -e 'text returned of result'` 2>/dev/null\n", stringData];
    stringData = [NSString stringWithFormat:@"%@\n", stringData];
    stringData = [NSString stringWithFormat:@"%@xcrun altool --notarization-info %@ -u %@ -p $stringPassword\n", stringData, stringRequestUuid, stringProjectDevId];
    stringData = [NSString stringWithFormat:@"%@xcrun stapler staple \"%@\"\n", stringData, stringPackageFile];
    stringData = [NSString stringWithFormat:@"%@xcrun stapler validate \"%@\"\n", stringData, stringPackageFile];
    stringData = [NSString stringWithFormat:@"%@\n", stringData];
    
    NSData *dataString = [stringData dataUsingEncoding:NSUTF8StringEncoding];
    
    NSFileManager *fileManager;
    fileManager = [NSFileManager defaultManager];
    
    [dataString writeToFile:stringScriptFile atomically:YES];
    
    [Logger setLogEvent:@"Writing staple package shell script: ", stringScriptFile, nil];
    
    if ([fileManager fileExistsAtPath:stringScriptFile] == YES) {
    
        // Set staple script file permissions
        NSError *error;
        
        [[NSFileManager defaultManager] setAttributes:@{NSFilePosixPermissions:@0755}
                                         ofItemAtPath:stringScriptFile
                                                error:&error];
        
        [Logger setLogEvent:@"Setting file permissions for: ", stringScriptFile, nil];
    
    }
    
    else {
        
        [Logger setLogEvent:@"Unable to find file for setting permssions: ", stringScriptFile, nil];
        
    }
    
}

@end
